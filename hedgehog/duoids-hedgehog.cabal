cabal-version: 3.0

-- This file has been generated from package.dhall by hpack version 0.37.0.
--
-- see: https://github.com/sol/hpack

name:           duoids-hedgehog
version:        0.0.1.0
synopsis:       Utilities for testing your `Duoid` and `Duoidal` instances with Hedgehog
description:    Whenever you write an instance, you should have unit tests to reassure
                you that your instance follows the relevant laws. With this package,
                that becomes simple for any of the classes provided by the duoids
                package. See algebraic-graph-duoids and transformer-duoids for usage of
                this package, in addition to the tests on this package itself.
category:       Algebra, Error Handling, Testing
homepage:       https://github.com/sellout/duoids#readme
bug-reports:    https://github.com/sellout/duoids/issues
author:         Greg Pfeil <greg@technomadic.org>
maintainer:     Greg Pfeil <greg@technomadic.org>
copyright:      2024 Greg Pfeil
license:        (AGPL-3.0-only WITH Universal-FOSS-exception-1.0 OR LicenseRef-commercial)
license-files:  LICENSE,
                LICENSE.AGPL-3.0-only,
                LICENSE.Universal-FOSS-exception-1.0,
                LICENSE.commercial
build-type:     Custom
tested-with:
    GHC == 9.6.1
  , GHC == 9.6.3
  , GHC == 9.8.1
  , GHC == 9.8.4
  , GHC == 9.10.1
  , GHC == 9.12.1
extra-doc-files:
    CHANGELOG.md
    README.md
    docs/license-report.md

source-repository head
  type: git
  location: https://github.com/sellout/duoids

custom-setup
  setup-depends:
      Cabal >=3.0.0
    , base >=4.18 && <4.19 || >=4.19 && <4.20 || >=4.20 && <4.21 || >=4.21 && <4.22
    , cabal-doctest >=1 && <1.1

flag noisy-deprecations
  description: Prior to GHC 9.10, the `DEPRECATED` pragma can’t distinguish between terms and types. Consenquently, you can get spurious warnings when there’s a name collision and the name in the other namespace is deprecated. Or you can choose to not get those warnings, at the risk of not being warned when there’s a name collision and the namespace you’re referencing is the one that’s deprecated.
  manual: True
  default: True

library
  exposed: False
  exposed-modules:
      Test.Duoid
      Test.Duoidal
  hs-source-dirs:
      src
  default-extensions:
      DefaultSignatures
      FunctionalDependencies
      LiberalTypeSynonyms
      PackageImports
      ParallelListComp
      RecursiveDo
      TransformListComp
      NoForeignFunctionInterface
      NoGeneralizedNewtypeDeriving
      NoImplicitPrelude
      NoMonomorphismRestriction
      NoPatternGuards
      StrictData
      TemplateHaskellQuotes
      NoTypeApplications
      LexicalNegation
      QualifiedDo
      DataKinds
      DerivingStrategies
      DisambiguateRecordFields
      ExplicitNamespaces
      GADTs
      LambdaCase
      MonoLocalBinds
      RoleAnnotations
  ghc-options: -Wtrustworthy-safe -fplugin=NoRecursion
  build-depends:
      base >=4.18 && <4.19 || >=4.19 && <4.20 || >=4.20 && <4.21 || >=4.21 && <4.22
    , duoids
    , hedgehog >=1.2 && <1.3 || >=1.4 && <1.5 || >=1.5 && <1.6 || >=1.7 && <1.8
    , no-recursion ==0.2.*
  if impl(ghc >= 8.0.1)
    default-extensions:
        StrictData
    ghc-options: -Weverything -Wno-all-missed-specialisations -Wno-missing-local-signatures -Wno-unsafe
  else
    ghc-options: -Wall
  if impl(ghc >= 8.10.1)
    ghc-options: -Wno-inferred-safe-imports -Wno-prepositive-qualified-module
  else
  if impl(ghc >= 9.2.1)
    ghc-options: -Wno-missing-kind-signatures
  else
  if impl(ghc >= 9.8.1)
    ghc-options: -Wno-missing-poly-kind-signatures -Wno-missing-role-annotations
  else
  if flag(noisy-deprecations)
    cpp-options: -DSELLOUT_NOISY_DEPRECATIONS
  else
  default-language: GHC2021

test-suite doctests
  type: exitcode-stdio-1.0
  main-is: doctests.hs
  hs-source-dirs:
      tests
  default-extensions:
      DefaultSignatures
      FunctionalDependencies
      LiberalTypeSynonyms
      PackageImports
      ParallelListComp
      RecursiveDo
      TransformListComp
      NoForeignFunctionInterface
      NoGeneralizedNewtypeDeriving
      NoImplicitPrelude
      NoMonomorphismRestriction
      NoPatternGuards
      StrictData
      TemplateHaskellQuotes
      NoTypeApplications
      LexicalNegation
      QualifiedDo
      Unsafe
  ghc-options: -Wtrustworthy-safe -fplugin=NoRecursion
  build-depends:
      base >=4.18 && <4.19 || >=4.19 && <4.20 || >=4.20 && <4.21 || >=4.21 && <4.22
    , doctest >=0.21.1 && <0.22 || >=0.22.6 && <0.23 || >=0.24 && <0.25
    , duoids-hedgehog
    , no-recursion ==0.2.*
  if impl(ghc >= 8.0.1)
    default-extensions:
        StrictData
    ghc-options: -Weverything -Wno-all-missed-specialisations -Wno-missing-local-signatures -Wno-unsafe
  else
    ghc-options: -Wall
  if impl(ghc >= 8.10.1)
    ghc-options: -Wno-inferred-safe-imports -Wno-prepositive-qualified-module
  else
  if impl(ghc >= 9.2.1)
    ghc-options: -Wno-missing-kind-signatures
  else
  if impl(ghc >= 9.8.1)
    ghc-options: -Wno-missing-poly-kind-signatures -Wno-missing-role-annotations
  else
  if flag(noisy-deprecations)
    cpp-options: -DSELLOUT_NOISY_DEPRECATIONS
  else
  if impl(ghc >= 8.0.1)
    ghc-options: -Wno-missing-import-lists -Wno-safe
  else
    ghc-options: -fno-warn-missing-import-lists
  if impl(ghc >= 8.4.1)
    ghc-options: -Wno-missing-export-lists
  else
  if impl(ghc >= 8.8.1)
    ghc-options: -Wno-missing-deriving-strategies
  else
  if impl(ghc >= 8.10.1)
    ghc-options: -Wno-unused-packages
  else
  default-language: GHC2021

test-suite laws
  type: exitcode-stdio-1.0
  main-is: tests/laws.hs
  default-extensions:
      DefaultSignatures
      FunctionalDependencies
      LiberalTypeSynonyms
      PackageImports
      ParallelListComp
      RecursiveDo
      TransformListComp
      NoForeignFunctionInterface
      NoGeneralizedNewtypeDeriving
      NoImplicitPrelude
      NoMonomorphismRestriction
      NoPatternGuards
      StrictData
      TemplateHaskellQuotes
      NoTypeApplications
      LexicalNegation
      QualifiedDo
      DataKinds
      DerivingStrategies
      DisambiguateRecordFields
      ExplicitNamespaces
      GADTs
      LambdaCase
      MonoLocalBinds
      RoleAnnotations
  ghc-options: -Wtrustworthy-safe -fplugin=NoRecursion
  build-depends:
      base >=4.18 && <4.19 || >=4.19 && <4.20 || >=4.20 && <4.21 || >=4.21 && <4.22
    , duoids-hedgehog
    , hedgehog >=1.2 && <1.3 || >=1.4 && <1.5 || >=1.5 && <1.6 || >=1.7 && <1.8
    , no-recursion ==0.2.*
  if impl(ghc >= 8.0.1)
    default-extensions:
        StrictData
    ghc-options: -Weverything -Wno-all-missed-specialisations -Wno-missing-local-signatures -Wno-unsafe
  else
    ghc-options: -Wall
  if impl(ghc >= 8.10.1)
    ghc-options: -Wno-inferred-safe-imports -Wno-prepositive-qualified-module
  else
  if impl(ghc >= 9.2.1)
    ghc-options: -Wno-missing-kind-signatures
  else
  if impl(ghc >= 9.8.1)
    ghc-options: -Wno-missing-poly-kind-signatures -Wno-missing-role-annotations
  else
  if flag(noisy-deprecations)
    cpp-options: -DSELLOUT_NOISY_DEPRECATIONS
  else
  default-language: GHC2021
